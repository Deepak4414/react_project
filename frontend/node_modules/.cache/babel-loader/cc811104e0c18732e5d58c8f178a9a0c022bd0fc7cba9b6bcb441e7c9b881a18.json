{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\frontend\\\\src\\\\components\\\\StudentModule\\\\View\\\\MainComponent\\\\ExploreMaterial\\\\Function\\\\Rating.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Rating = ({\n  item\n}) => {\n  _s();\n  const [rating, setRating] = useState(null); // To store the rating value from the backend\n  const [isRated, setIsRated] = useState(false); // To track if the user has already rated\n  const [feedbackMessage, setFeedbackMessage] = useState(\"\");\n\n  // Fetch the existing rating when the component is mounted\n  useEffect(() => {\n    const fetchRating = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/rating/${item.id}`);\n        if (response.data.rating !== null) {\n          setRating(response.data.rating); // Store the existing rating\n          setIsRated(true); // Set the form as disabled\n        }\n      } catch (error) {\n        console.error(\"Error fetching rating:\", error);\n      }\n    };\n    fetchRating();\n  }, [item.id]);\n\n  // Handle rating form submission\n  const handleRatingSubmit = async e => {\n    e.preventDefault();\n    const ratingValue = e.target.ratingValue.value;\n\n    // API call to submit rating\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/rating\", {\n        itemId: item.id,\n        rating: ratingValue\n      });\n      if (response.status === 200) {\n        setFeedbackMessage(`Thank you for rating ${item.id} as ${ratingValue} stars!`);\n        setIsRated(true); // Disable the form after successful submission\n        setRating(ratingValue); // Update the rating state\n      } else {\n        setFeedbackMessage(\"Failed to submit rating. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting rating:\", error);\n      setFeedbackMessage(\"An error occurred. Please try again later.\");\n    }\n    e.target.reset(); // Reset the form after submission\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-text\",\n      children: [\"ID: \", item.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), isRated ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You've rated this item: \", rating, \" stars\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRatingSubmit,\n      className: \"d-flex align-items-center\",\n      style: {\n        gap: \"0.5em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `ratingValue-${item.id}`,\n        className: \"mb-0\",\n        children: \"Rate:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: `ratingValue-${item.id}`,\n        name: \"ratingValue\",\n        min: \"1\",\n        max: \"5\",\n        required: true,\n        className: \"form-control\",\n        style: {\n          width: \"50px\"\n        },\n        disabled: isRated // Disable input if the user has already rated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-sm\",\n        disabled: isRated,\n        children: [\" \", \"Submit\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), feedbackMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: feedbackMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Rating, \"1SD3xGTv8KmXvCpwBFjwwRBxDBs=\");\n_c = Rating;\nexport default Rating;\nvar _c;\n$RefreshReg$(_c, \"Rating\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Rating","item","_s","rating","setRating","isRated","setIsRated","feedbackMessage","setFeedbackMessage","fetchRating","response","get","id","data","error","console","handleRatingSubmit","e","preventDefault","ratingValue","target","value","post","itemId","status","reset","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","gap","htmlFor","type","name","min","max","required","width","disabled","_c","$RefreshReg$"],"sources":["D:/project/frontend/src/components/StudentModule/View/MainComponent/ExploreMaterial/Function/Rating.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Rating = ({ item }) => {\r\n  const [rating, setRating] = useState(null);  // To store the rating value from the backend\r\n  const [isRated, setIsRated] = useState(false);  // To track if the user has already rated\r\n  const [feedbackMessage, setFeedbackMessage] = useState(\"\");\r\n\r\n  // Fetch the existing rating when the component is mounted\r\n  useEffect(() => {\r\n    const fetchRating = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/rating/${item.id}`);\r\n        if (response.data.rating !== null) {\r\n          setRating(response.data.rating); // Store the existing rating\r\n          setIsRated(true); // Set the form as disabled\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching rating:\", error);\r\n      }\r\n    };\r\n\r\n    fetchRating();\r\n  }, [item.id]);\r\n\r\n  // Handle rating form submission\r\n  const handleRatingSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const ratingValue = e.target.ratingValue.value;\r\n\r\n    // API call to submit rating\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/rating\", {\r\n        itemId: item.id,\r\n        rating: ratingValue,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        setFeedbackMessage(`Thank you for rating ${item.id} as ${ratingValue} stars!`);\r\n        setIsRated(true);  // Disable the form after successful submission\r\n        setRating(ratingValue); // Update the rating state\r\n      } else {\r\n        setFeedbackMessage(\"Failed to submit rating. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting rating:\", error);\r\n      setFeedbackMessage(\"An error occurred. Please try again later.\");\r\n    }\r\n\r\n    e.target.reset(); // Reset the form after submission\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"card-text\">ID: {item.id}</p>\r\n\r\n      {/* Display the rating if already rated */}\r\n      {isRated ? (\r\n        <p>You've rated this item: {rating} stars</p>\r\n      ) : (\r\n        <form\r\n          onSubmit={handleRatingSubmit}\r\n          className=\"d-flex align-items-center\"\r\n          style={{ gap: \"0.5em\" }}\r\n        >\r\n          <label htmlFor={`ratingValue-${item.id}`} className=\"mb-0\">\r\n            Rate:\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            id={`ratingValue-${item.id}`}\r\n            name=\"ratingValue\"\r\n            min=\"1\"\r\n            max=\"5\"\r\n            required\r\n            className=\"form-control\"\r\n            style={{ width: \"50px\" }}\r\n            disabled={isRated}  // Disable input if the user has already rated\r\n          />\r\n          <button type=\"submit\" className=\"btn btn-primary btn-sm\" disabled={isRated}> {/* Disable submit button if already rated */}\r\n            Submit\r\n          </button>\r\n        </form>\r\n      )}\r\n\r\n      {feedbackMessage && <p>{feedbackMessage}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rating;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}