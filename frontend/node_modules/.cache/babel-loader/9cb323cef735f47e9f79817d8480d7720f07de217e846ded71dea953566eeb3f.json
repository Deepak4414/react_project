{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\frontend\\\\src\\\\components\\\\StudentModule\\\\View\\\\MainComponent\\\\ExploreMaterial\\\\functionality\\\\ModelVideo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoItem = ({\n  item\n}) => {\n  _s();\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [content, setContent] = useState(null);\n  const displayTitle = item.title.length > 15 ? item.title.slice(0, 12) + '...' : item.title;\n  const openModal = () => {\n    const url = item.link;\n    if (url.includes(\"youtube.com\") || url.includes(\"youtu.be\")) {\n      // Extract YouTube embed URL\n      const videoId = url.includes(\"youtu.be\") ? url.split(\"/\").pop() : new URL(url).searchParams.get(\"v\");\n      const embedUrl = `https://www.youtube.com/embed/${videoId}`;\n      setContent(/*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: embedUrl,\n        title: \"YouTube video player\",\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this));\n    } else if (/\\.(pdf|docx?|xlsx?|pptx?)$/i.test(url)) {\n      // Show embedded document\n      setContent(/*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: url,\n        width: \"100%\",\n        height: \"600px\",\n        title: \"Document Viewer\",\n        frameBorder: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this));\n    } else {\n      // Show website preview\n      setContent(/*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: url,\n        width: \"100%\",\n        height: \"600px\",\n        title: \"Website Viewer\",\n        frameBorder: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this));\n    }\n    setModalIsOpen(true);\n  };\n  const closeModal = () => {\n    setModalIsOpen(false);\n    setContent(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: openModal,\n      children: [\"\\uD83C\\uDF10 \", displayTitle]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      style: {\n        content: {\n          width: '80%',\n          // Set the width of the modal\n          height: '80%',\n          // Set the height of the modal\n          margin: 'auto',\n          // Center the modal\n          overflow: 'hidden' // Prevent overflow\n        },\n        overlay: {\n          backgroundColor: 'rgba(0, 0, 0, 0.75)' // Optional: Change overlay color\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(VideoItem, \"T+fuBZqRkHkqwOLbXJWtiJaEY68=\");\n_c = VideoItem;\nexport default VideoItem;\nvar _c;\n$RefreshReg$(_c, \"VideoItem\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","VideoItem","item","_s","modalIsOpen","setModalIsOpen","content","setContent","displayTitle","title","length","slice","openModal","url","link","includes","videoId","split","pop","URL","searchParams","get","embedUrl","width","height","src","frameBorder","allow","allowFullScreen","fileName","_jsxFileName","lineNumber","columnNumber","test","closeModal","children","onClick","isOpen","onRequestClose","style","margin","overflow","overlay","backgroundColor","_c","$RefreshReg$"],"sources":["D:/project/frontend/src/components/StudentModule/View/MainComponent/ExploreMaterial/functionality/ModelVideo.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nconst VideoItem = ({ item }) => {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [content, setContent] = useState(null);\r\n    const displayTitle = item.title.length > 15 ? item.title.slice(0, 12) + '...' : item.title;\r\n\r\n    const openModal = () => {\r\n        const url = item.link;\r\n\r\n        if (url.includes(\"youtube.com\") || url.includes(\"youtu.be\")) {\r\n            // Extract YouTube embed URL\r\n            const videoId = url.includes(\"youtu.be\")\r\n                ? url.split(\"/\").pop()\r\n                : new URL(url).searchParams.get(\"v\");\r\n            const embedUrl = `https://www.youtube.com/embed/${videoId}`;\r\n            setContent(\r\n                <iframe\r\n                    width=\"560\"\r\n                    height=\"315\"\r\n                    src={embedUrl}\r\n                    title=\"YouTube video player\"\r\n                    frameBorder=\"0\"\r\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                    allowFullScreen\r\n                ></iframe>\r\n            );\r\n        } else if (/\\.(pdf|docx?|xlsx?|pptx?)$/i.test(url)) {\r\n            // Show embedded document\r\n            setContent(\r\n                <iframe\r\n                    src={url}\r\n                    width=\"100%\"\r\n                    height=\"600px\"\r\n                    title=\"Document Viewer\"\r\n                    frameBorder=\"0\"\r\n                ></iframe>\r\n            );\r\n        } else {\r\n            // Show website preview\r\n            setContent(\r\n                <iframe\r\n                    src={url}\r\n                    width=\"100%\"\r\n                    height=\"600px\"\r\n                    title=\"Website Viewer\"\r\n                    frameBorder=\"0\"\r\n                ></iframe>\r\n            );\r\n        }\r\n\r\n        setModalIsOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setModalIsOpen(false);\r\n        setContent(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div onClick={openModal}>\r\n                üåê {displayTitle}\r\n            </div>\r\n\r\n            <Modal isOpen={modalIsOpen} onRequestClose={closeModal}\r\n                style={{\r\n                    content: {\r\n                        width: '80%', // Set the width of the modal\r\n                        height: '80%', // Set the height of the modal\r\n                        margin: 'auto', // Center the modal\r\n                        overflow: 'hidden', // Prevent overflow\r\n                    },\r\n                    overlay: {\r\n                        backgroundColor: 'rgba(0, 0, 0, 0.75)', // Optional: Change overlay color\r\n                    }\r\n                }}\r\n            >\r\n                <h2>{item.title}</h2>\r\n                <button onClick={closeModal}>Close</button>\r\n                <div>{content}</div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoItem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}