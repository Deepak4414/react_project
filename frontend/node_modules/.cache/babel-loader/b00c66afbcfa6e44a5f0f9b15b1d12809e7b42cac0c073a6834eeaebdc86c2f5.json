{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_project\\\\frontend\\\\src\\\\components\\\\StudentModule\\\\View\\\\MainComponent\\\\ExploreMaterial\\\\Function\\\\RatingTooltip.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../../../../Css/RatingTooltip.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RatingTooltip = ({\n  item,\n  username\n}) => {\n  _s();\n  {}\n  const [ratingDistribution, setRatingDistribution] = useState([0, 0, 0, 0, 0]); // Default counts\n  const [totalRatings, setTotalRatings] = useState(0);\n  const [averageRating, setAverageRating] = useState(0);\n\n  // Fetch rating distribution and calculate overall rating\n  useEffect(() => {\n    const fetchRatingDistribution = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/rating/${item}`, {\n          params: {\n            username\n          }\n        });\n        const distribution = response.data;\n        setRatingDistribution(distribution);\n\n        // Calculate total ratings and average rating\n        const total = distribution.reduce((acc, count) => acc + count, 0);\n        const average = distribution.reduce((acc, count, index) => acc + count * (index + 1), 0) / (total || 1);\n        setTotalRatings(total);\n        setAverageRating(average.toFixed(1)); // Round to 1 decimal place\n      } catch (error) {\n        console.error(\"Error fetching rating distribution:\", error);\n      }\n    };\n    fetchRatingDistribution();\n  }, [item, username]);\n  const renderBarGraph = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rating-bar-graph\",\n      children: ratingDistribution.map((count, index) => {\n        const percentage = (count / (totalRatings || 1) * 100).toFixed(1);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-bar-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating-bar-label\",\n            children: [5 - index, \" star\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rating-bar-fill\",\n              style: {\n                width: `${percentage}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating-bar-percentage\",\n            children: [percentage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rating-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"rating-overall\",\n      children: [averageRating, \" out of 5 (\", totalRatings, \" ratings)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), renderBarGraph()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(RatingTooltip, \"F5CLTTxNJ1ndhB8S6WtcuzUI8go=\");\n_c = RatingTooltip;\nexport default RatingTooltip;\nvar _c;\n$RefreshReg$(_c, \"RatingTooltip\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","RatingTooltip","item","username","_s","ratingDistribution","setRatingDistribution","totalRatings","setTotalRatings","averageRating","setAverageRating","fetchRatingDistribution","response","get","params","distribution","data","total","reduce","acc","count","average","index","toFixed","error","console","renderBarGraph","className","children","map","percentage","fileName","_jsxFileName","lineNumber","columnNumber","style","width","_c","$RefreshReg$"],"sources":["D:/react_project/frontend/src/components/StudentModule/View/MainComponent/ExploreMaterial/Function/RatingTooltip.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../../../../Css/RatingTooltip.css';\r\nconst RatingTooltip = ({ item, username }) => {\r\n    {}\r\n\r\n    const [ratingDistribution, setRatingDistribution] = useState([0, 0, 0, 0, 0]); // Default counts\r\n    const [totalRatings, setTotalRatings] = useState(0);\r\n    const [averageRating, setAverageRating] = useState(0);\r\n\r\n    // Fetch rating distribution and calculate overall rating\r\n    useEffect(() => {\r\n        const fetchRatingDistribution = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:5000/api/rating/${item}`, {\r\n                    params: { username }\r\n                });\r\n                const distribution = response.data;\r\n                setRatingDistribution(distribution);\r\n\r\n                // Calculate total ratings and average rating\r\n                const total = distribution.reduce((acc, count) => acc + count, 0);\r\n                const average = distribution.reduce(\r\n                    (acc, count, index) => acc + count * (index + 1),\r\n                    0\r\n                ) / (total || 1);\r\n\r\n                setTotalRatings(total);\r\n                setAverageRating(average.toFixed(1)); // Round to 1 decimal place\r\n            } catch (error) {\r\n                console.error(\"Error fetching rating distribution:\", error);\r\n            }\r\n        };\r\n\r\n        fetchRatingDistribution();\r\n    }, [item, username]);\r\n\r\n    const renderBarGraph = () => {\r\n        return (\r\n            <div className=\"rating-bar-graph\">\r\n                {ratingDistribution.map((count, index) => {\r\n                    const percentage = ((count / (totalRatings || 1)) * 100).toFixed(1);\r\n                    return (\r\n                        <div key={index} className=\"rating-bar-item\">\r\n                            <div className=\"rating-bar-label\">\r\n                                {5 - index} star\r\n                            </div>\r\n                            <div className=\"rating-bar\">\r\n                                <div\r\n                                    className=\"rating-bar-fill\"\r\n                                    style={{ width: `${percentage}%` }}\r\n                                ></div>\r\n                            </div>\r\n                            <div className=\"rating-bar-percentage\">{percentage}%</div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"rating-component\">\r\n            <h3 className=\"rating-overall\">\r\n                {averageRating} out of 5 ({totalRatings} ratings)\r\n            </h3>\r\n            {renderBarGraph()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RatingTooltip;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}