{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_project\\\\frontend\\\\src\\\\components\\\\StudentModule\\\\View\\\\MainComponent\\\\ExploreMaterial\\\\Function\\\\Rating.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n// import '../../../../Css/RatingTooltip.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Rating = ({\n  item,\n  username\n}) => {\n  _s();\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [feedbackMessage, setFeedbackMessage] = useState(\"\");\n  const [ratingDistribution, setRatingDistribution] = useState([0, 0, 0, 0, 0]); // Default counts\n  const [totalRatings, setTotalRatings] = useState(0);\n  const [averageRating, setAverageRating] = useState(0);\n\n  // Fetch rating distribution and calculate overall rating\n  // useEffect(() => {\n  //     const fetchRatingDistribution = async () => {\n  //         try {\n  //             const response = await axios.get(`http://localhost:5000/api/rating/${item}`, {\n  //                 params: { username }\n  //             });\n  //             const distribution = response.data;\n  //             setRatingDistribution(distribution);\n\n  //             // Calculate total ratings and average rating\n  //             const total = distribution.reduce((acc, count) => acc + count, 0);\n  //             const average = distribution.reduce(\n  //                 (acc, count, index) => acc + count * (index + 1),\n  //                 0\n  //             ) / (total || 1);\n\n  //             setTotalRatings(total);\n  //             setAverageRating(average.toFixed(1)); // Round to 1 decimal place\n  //         } catch (error) {\n  //             console.error(\"Error fetching rating distribution:\", error);\n  //         }\n  //     };\n\n  //     fetchRatingDistribution();\n  // }, [item, username]);\n\n  const handleRatingSubmit = async (e, itemId) => {\n    e.preventDefault();\n    const ratingValue = e.target.ratingValue.value;\n    try {\n      const response = await axios.post('http://localhost:5000/api/rating', {\n        itemId,\n        username,\n        rating: ratingValue\n      });\n      if (response.status === 200) {\n        setFeedbackMessage(`Thank you for rating item ${itemId} as ${ratingValue} stars!`);\n      } else {\n        setFeedbackMessage(\"Failed to submit rating. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting rating:\", error);\n      if (error.response && error.response.status === 400) {\n        setFeedbackMessage('You have already rated this item');\n      } else {\n        setFeedbackMessage('An error occurred. Please try again.');\n      }\n    }\n    e.target.reset(); // Reset the form after submission\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rating-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleRatingSubmit(e, item),\n      className: \"rating-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `ratingValue-${item}`,\n        children: \"Rate this item:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: `ratingValue-${item}`,\n        name: \"ratingValue\",\n        min: \"1\",\n        max: \"5\",\n        required: true,\n        className: \"rating-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"rating-submit-btn\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), feedbackMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"rating-feedback\",\n      children: feedbackMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(Rating, \"6i49TyALm56rZ5XvcMVresK6zVA=\");\n_c = Rating;\nexport default Rating;\nvar _c;\n$RefreshReg$(_c, \"Rating\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Rating","item","username","_s","showTooltip","setShowTooltip","feedbackMessage","setFeedbackMessage","ratingDistribution","setRatingDistribution","totalRatings","setTotalRatings","averageRating","setAverageRating","handleRatingSubmit","e","itemId","preventDefault","ratingValue","target","value","response","post","rating","status","error","console","reset","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","min","max","required","_c","$RefreshReg$"],"sources":["D:/react_project/frontend/src/components/StudentModule/View/MainComponent/ExploreMaterial/Function/Rating.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n// import '../../../../Css/RatingTooltip.css';\r\n\r\nconst Rating = ({ item, username }) => {\r\n    const [showTooltip, setShowTooltip] = useState(false);\r\n    const [feedbackMessage, setFeedbackMessage] = useState(\"\");\r\n    const [ratingDistribution, setRatingDistribution] = useState([0, 0, 0, 0, 0]); // Default counts\r\n    const [totalRatings, setTotalRatings] = useState(0);\r\n    const [averageRating, setAverageRating] = useState(0);\r\n\r\n    // Fetch rating distribution and calculate overall rating\r\n    // useEffect(() => {\r\n    //     const fetchRatingDistribution = async () => {\r\n    //         try {\r\n    //             const response = await axios.get(`http://localhost:5000/api/rating/${item}`, {\r\n    //                 params: { username }\r\n    //             });\r\n    //             const distribution = response.data;\r\n    //             setRatingDistribution(distribution);\r\n\r\n    //             // Calculate total ratings and average rating\r\n    //             const total = distribution.reduce((acc, count) => acc + count, 0);\r\n    //             const average = distribution.reduce(\r\n    //                 (acc, count, index) => acc + count * (index + 1),\r\n    //                 0\r\n    //             ) / (total || 1);\r\n\r\n    //             setTotalRatings(total);\r\n    //             setAverageRating(average.toFixed(1)); // Round to 1 decimal place\r\n    //         } catch (error) {\r\n    //             console.error(\"Error fetching rating distribution:\", error);\r\n    //         }\r\n    //     };\r\n\r\n    //     fetchRatingDistribution();\r\n    // }, [item, username]);\r\n\r\n    const handleRatingSubmit = async (e, itemId) => {\r\n        e.preventDefault();\r\n        const ratingValue = e.target.ratingValue.value;\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/rating', {\r\n                itemId,\r\n                username,\r\n                rating: ratingValue,\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                setFeedbackMessage(`Thank you for rating item ${itemId} as ${ratingValue} stars!`);\r\n            } else {\r\n                setFeedbackMessage(\"Failed to submit rating. Please try again.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error submitting rating:\", error);\r\n            if (error.response && error.response.status === 400) {\r\n                setFeedbackMessage('You have already rated this item');\r\n            } else {\r\n                setFeedbackMessage('An error occurred. Please try again.');\r\n            }\r\n        }\r\n\r\n        e.target.reset(); // Reset the form after submission\r\n    };\r\n\r\n  \r\n\r\n    return (\r\n        <div className=\"rating-component\">\r\n            <form\r\n                onSubmit={(e) => handleRatingSubmit(e, item)}\r\n                className=\"rating-form\"\r\n            >\r\n                <label htmlFor={`ratingValue-${item}`}>\r\n                    Rate this item:\r\n                </label>\r\n                <br />  \r\n                <input\r\n                    type=\"number\"\r\n                    id={`ratingValue-${item}`}\r\n                    name=\"ratingValue\"\r\n                    min=\"1\"\r\n                    max=\"5\"\r\n                    required\r\n                    className=\"rating-input\"\r\n                />\r\n                <button type=\"submit\" className=\"rating-submit-btn\">\r\n                    Submit\r\n                </button>\r\n            </form>\r\n            {feedbackMessage && <p className=\"rating-feedback\">{feedbackMessage}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Rating;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}