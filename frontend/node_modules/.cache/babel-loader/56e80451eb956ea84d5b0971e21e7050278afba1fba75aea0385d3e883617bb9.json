{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_project\\\\frontend\\\\src\\\\components\\\\FacultyModule\\\\View\\\\MainComponent\\\\NptelContent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NptelContent = () => {\n  _s();\n  const [videoForms, setVideoForms] = useState([]);\n  const [videoTitle, setVideoTitle] = useState('');\n  const [videoDescription, setVideoDescription] = useState('');\n  const [videoOptions, setVideoOptions] = useState([]);\n  const [videoNames, setVideoNames] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState('');\n  const handleAddVideoForm = () => {\n    setVideoForms([...videoForms, {\n      id: videoForms.length + 1,\n      title: '',\n      description: '',\n      video: ''\n    }]);\n  };\n  const handleRemoveVideoForm = id => {\n    setVideoForms(videoForms.filter(form => form.id !== id));\n  };\n  const handleVideoTitleChange = (id, event) => {\n    const updatedForms = videoForms.map(form => {\n      if (form.id === id) {\n        return {\n          ...form,\n          title: event.target.value\n        };\n      }\n      return form;\n    });\n    setVideoForms(updatedForms);\n  };\n  const handleVideoDescriptionChange = (id, event) => {\n    const updatedForms = videoForms.map(form => {\n      if (form.id === id) {\n        return {\n          ...form,\n          description: event.target.value\n        };\n      }\n      return form;\n    });\n    setVideoForms(updatedForms);\n  };\n  const handleVideoChange = (id, event) => {\n    const updatedForms = videoForms.map(form => {\n      if (form.id === id) {\n        return {\n          ...form,\n          video: event.target.value\n        };\n      }\n      return form;\n    });\n    setVideoForms(updatedForms);\n  };\n\n  // Fetch video names from the backend on component mount\n  useEffect(() => {\n    const fetchVideoNames = async () => {\n      try {\n        const response = await axios.get('/api/videos'); // Replace with your backend endpoint\n        setVideoNames(response.data);\n      } catch (error) {\n        console.error('Error fetching video names:', error);\n      }\n    };\n    fetchVideoNames();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!videoTitle || !selectedVideo) {\n      alert('Please fill in all required fields.');\n      return;\n    }\n    try {\n      const data = {\n        video_title: videoTitle,\n        video_description: videoDescription,\n        video_name: selectedVideo\n      };\n      await axios.post('/api/nptelcontent', data); // Replace with your backend endpoint\n      alert('Data saved successfully!');\n      // Reset form fields\n      setVideoTitle('');\n      setVideoDescription('');\n      setSelectedVideo('');\n    } catch (error) {\n      console.error('Error saving data:', error);\n      alert('Failed to save data.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [videoForms.map(form => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border p-3 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `video-title-${form.id}`,\n            children: \"Video Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: `video-title-${form.id}`,\n            className: \"form-control\",\n            value: form.title,\n            onChange: event => handleVideoTitleChange(form.id, event),\n            placeholder: \"Enter video title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `video-description-${form.id}`,\n            children: \"Video Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: `video-description-${form.id}`,\n            className: \"form-control\",\n            value: form.description,\n            onChange: event => handleVideoDescriptionChange(form.id, event),\n            placeholder: \"Enter video description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Video Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: selectedVideo,\n            onChange: e => setSelectedVideo(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"--Select a Video--\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this), videoNames.map((video, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: video,\n              children: video\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger\",\n        onClick: () => handleRemoveVideoForm(form.id),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this)]\n    }, form.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary mb-3\",\n      onClick: handleAddVideoForm,\n      children: \"Add Nptel Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(NptelContent, \"GTAODk5TMlLNqJbwzrJ8T1vKbJE=\");\n_c = NptelContent;\nexport default NptelContent;\nvar _c;\n$RefreshReg$(_c, \"NptelContent\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","NptelContent","_s","videoForms","setVideoForms","videoTitle","setVideoTitle","videoDescription","setVideoDescription","videoOptions","setVideoOptions","videoNames","setVideoNames","selectedVideo","setSelectedVideo","handleAddVideoForm","id","length","title","description","video","handleRemoveVideoForm","filter","form","handleVideoTitleChange","event","updatedForms","map","target","value","handleVideoDescriptionChange","handleVideoChange","fetchVideoNames","response","get","data","error","console","handleSubmit","e","preventDefault","alert","video_title","video_description","video_name","post","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","required","index","onClick","_c","$RefreshReg$"],"sources":["D:/react_project/frontend/src/components/FacultyModule/View/MainComponent/NptelContent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst NptelContent = () => {\r\n    const [videoForms, setVideoForms] = useState([]);\r\n    const [videoTitle, setVideoTitle] = useState('');\r\n    const [videoDescription, setVideoDescription] = useState('');\r\n    const [videoOptions, setVideoOptions] = useState([]);\r\n    const [videoNames, setVideoNames] = useState([]);\r\n    const [selectedVideo, setSelectedVideo] = useState('');\r\n\r\n    const handleAddVideoForm = () => {\r\n        setVideoForms([...videoForms, { id: videoForms.length + 1, title: '', description: '', video: '' }]);\r\n    };\r\n\r\n    const handleRemoveVideoForm = (id) => {\r\n        setVideoForms(videoForms.filter((form) => form.id !== id));\r\n    };\r\n\r\n    const handleVideoTitleChange = (id, event) => {\r\n        const updatedForms = videoForms.map((form) => {\r\n            if (form.id === id) {\r\n                return { ...form, title: event.target.value };\r\n            }\r\n            return form;\r\n        });\r\n        setVideoForms(updatedForms);\r\n    };\r\n\r\n    const handleVideoDescriptionChange = (id, event) => {\r\n        const updatedForms = videoForms.map((form) => {\r\n            if (form.id === id) {\r\n                return { ...form, description: event.target.value };\r\n            }\r\n            return form;\r\n        });\r\n        setVideoForms(updatedForms);\r\n    };\r\n\r\n    const handleVideoChange = (id, event) => {\r\n        const updatedForms = videoForms.map((form) => {\r\n            if (form.id === id) {\r\n                return { ...form, video: event.target.value };\r\n            }\r\n            return form;\r\n        });\r\n        setVideoForms(updatedForms);\r\n    };\r\n\r\n    // Fetch video names from the backend on component mount\r\n    useEffect(() => {\r\n        const fetchVideoNames = async () => {\r\n            try {\r\n                const response = await axios.get('/api/videos'); // Replace with your backend endpoint\r\n                setVideoNames(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching video names:', error);\r\n            }\r\n        };\r\n        fetchVideoNames();\r\n    }, []);\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        if (!videoTitle || !selectedVideo) {\r\n          alert('Please fill in all required fields.');\r\n          return;\r\n        }\r\n    \r\n        try {\r\n          const data = {\r\n            video_title: videoTitle,\r\n            video_description: videoDescription,\r\n            video_name: selectedVideo,\r\n          };\r\n          await axios.post('/api/nptelcontent', data); // Replace with your backend endpoint\r\n          alert('Data saved successfully!');\r\n          // Reset form fields\r\n          setVideoTitle('');\r\n          setVideoDescription('');\r\n          setSelectedVideo('');\r\n        } catch (error) {\r\n          console.error('Error saving data:', error);\r\n          alert('Failed to save data.');\r\n        }\r\n      };\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            {videoForms.map((form) => (\r\n                <div key={form.id} className=\"border p-3 mb-3\">\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor={`video-title-${form.id}`}>Video Title</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id={`video-title-${form.id}`}\r\n                                className=\"form-control\"\r\n                                value={form.title}\r\n                                onChange={(event) => handleVideoTitleChange(form.id, event)}\r\n                                placeholder=\"Enter video title\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label htmlFor={`video-description-${form.id}`}>Video Description</label>\r\n                            <textarea\r\n                                id={`video-description-${form.id}`}\r\n                                className=\"form-control\"\r\n                                value={form.description}\r\n                                onChange={(event) => handleVideoDescriptionChange(form.id, event)}\r\n                                placeholder=\"Enter video description\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-md-6\">\r\n                            <label>Video Name:</label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                value={selectedVideo}\r\n                                onChange={(e) => setSelectedVideo(e.target.value)}\r\n                                required\r\n                            >\r\n                                <option value=\"\">--Select a Video--</option>\r\n                                {videoNames.map((video, index) => (\r\n                                    <option key={index} value={video}>\r\n                                        {video}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger\"\r\n                        onClick={() => handleRemoveVideoForm(form.id)}\r\n                    >\r\n                        Remove\r\n                    </button>\r\n                </div>\r\n            ))}\r\n            <button type=\"button\" className=\"btn btn-primary mb-3\" onClick={handleAddVideoForm}>\r\n                Add Nptel Video\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NptelContent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}