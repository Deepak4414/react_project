{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_project\\\\frontend\\\\src\\\\components\\\\FacultyModule\\\\View\\\\MainComponent\\\\Faculty.jsx\",\n  _s = $RefreshSig$();\nimport React, { use } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport Home from \"./Home\";\nimport AddCourse from \"./AddCourse\";\nimport AddTopic from \"./AddTopic\";\nimport UpdateCourse from \"./UpdateCourse\";\nimport Logout from \"../../../Registration/Logout\";\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Faculty({\n  isLoggedIn\n}) {\n  _s();\n  const [userState, setUserState] = useState(null);\n  useEffect(() => {\n    // Retrieve userState from localStorage\n    const savedUserState = localStorage.getItem('userState');\n    if (savedUserState) {\n      setUserState(JSON.parse(savedUserState));\n    } else {\n      // Handle case where userState is not found (e.g., user is not logged in)\n      console.log('No user data found in local storage');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isLoggedIn: isLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            username: userState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          element: /*#__PURE__*/_jsxDEV(AddCourse, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-topic\",\n          element: /*#__PURE__*/_jsxDEV(AddTopic, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/update\",\n          element: /*#__PURE__*/_jsxDEV(UpdateCourse, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/logout\",\n          element: Logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Faculty, \"I1zNbkIoajNGv8DsduHBX91/efg=\");\n_c = Faculty;\nexport default Faculty;\nvar _c;\n$RefreshReg$(_c, \"Faculty\");","map":{"version":3,"names":["React","use","BrowserRouter","Router","Route","Routes","Navbar","Home","AddCourse","AddTopic","UpdateCourse","Logout","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","Faculty","isLoggedIn","_s","userState","setUserState","useState","useEffect","savedUserState","localStorage","getItem","JSON","parse","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","username","_c","$RefreshReg$"],"sources":["D:/react_project/frontend/src/components/FacultyModule/View/MainComponent/Faculty.jsx"],"sourcesContent":["import React,{use} from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Navbar from \"./Navbar\";\r\nimport Home from \"./Home\";\r\nimport AddCourse from \"./AddCourse\";\r\nimport AddTopic from \"./AddTopic\";\r\nimport UpdateCourse from \"./UpdateCourse\";\r\nimport Logout from \"../../../Registration/Logout\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction Faculty({isLoggedIn}) {\r\n   const [userState, setUserState] = useState(null);\r\n   \r\n       useEffect(() => {\r\n           // Retrieve userState from localStorage\r\n           const savedUserState = localStorage.getItem('userState');\r\n           if (savedUserState) {\r\n               setUserState(JSON.parse(savedUserState));\r\n           } else {\r\n               // Handle case where userState is not found (e.g., user is not logged in)\r\n               console.log('No user data found in local storage');\r\n           }\r\n       }, []);\r\n    return (\r\n        <>\r\n            <Navbar isLoggedIn={isLoggedIn}/>\r\n            \r\n            <div className=\"container mt-4\">\r\n                <Routes>\r\n                    <Route path=\"/\" element={<Home username={userState}/>} />\r\n                    <Route path=\"/add\" element={<AddCourse />} />\r\n                    <Route path=\"/add-topic\" element={<AddTopic />} />\r\n                    <Route path=\"/update\" element={<UpdateCourse />} />\r\n                    <Route path=\"/logout\" element={Logout} />\r\n                </Routes>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Faculty;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,GAAG,QAAO,OAAO;AAC/B,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,MAAM,MAAM,8BAA8B;AACjD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,SAASC,OAAOA,CAAC;EAACC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMC,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACxD,IAAIF,cAAc,EAAE;MAChBH,YAAY,CAACM,IAAI,CAACC,KAAK,CAACJ,cAAc,CAAC,CAAC;IAC5C,CAAC,MAAM;MACH;MACAK,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IACtD;EACJ,CAAC,EAAE,EAAE,CAAC;EACT,oBACIhB,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACIjB,OAAA,CAACR,MAAM;MAACY,UAAU,EAAEA;IAAW;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAEjCrB,OAAA;MAAKsB,SAAS,EAAC,gBAAgB;MAAAL,QAAA,eAC3BjB,OAAA,CAACT,MAAM;QAAA0B,QAAA,gBACHjB,OAAA,CAACV,KAAK;UAACiC,IAAI,EAAC,GAAG;UAACC,OAAO,eAAExB,OAAA,CAACP,IAAI;YAACgC,QAAQ,EAAEnB;UAAU;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzDrB,OAAA,CAACV,KAAK;UAACiC,IAAI,EAAC,MAAM;UAACC,OAAO,eAAExB,OAAA,CAACN,SAAS;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7CrB,OAAA,CAACV,KAAK;UAACiC,IAAI,EAAC,YAAY;UAACC,OAAO,eAAExB,OAAA,CAACL,QAAQ;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClDrB,OAAA,CAACV,KAAK;UAACiC,IAAI,EAAC,SAAS;UAACC,OAAO,eAAExB,OAAA,CAACJ,YAAY;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnDrB,OAAA,CAACV,KAAK;UAACiC,IAAI,EAAC,SAAS;UAACC,OAAO,EAAE3B;QAAO;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA,eACR,CAAC;AAEX;AAAChB,EAAA,CA5BQF,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AA8BhB,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}