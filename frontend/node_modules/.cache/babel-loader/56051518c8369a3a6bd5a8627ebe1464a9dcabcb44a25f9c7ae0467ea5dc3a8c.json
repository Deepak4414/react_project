{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_project\\\\frontend\\\\src\\\\components\\\\FacultyModule\\\\View\\\\MainComponent\\\\NptelContent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NptelContent = () => {\n  _s();\n  const [videoTitle, setVideoTitle] = useState('');\n  const [videoDescription, setVideoDescription] = useState('');\n  const [videoNames, setVideoNames] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState('');\n\n  // Fetch video names from the backend on component mount\n  useEffect(() => {\n    const fetchVideoNames = async () => {\n      try {\n        const response = await axios.get('/api/videos'); // Replace with your backend endpoint\n        setVideoNames(response.data);\n      } catch (error) {\n        console.error('Error fetching video names:', error);\n      }\n    };\n    fetchVideoNames();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!videoTitle || !selectedVideo) {\n      alert('Please fill in all required fields.');\n      return;\n    }\n    try {\n      const data = {\n        video_title: videoTitle,\n        video_description: videoDescription,\n        video_name: selectedVideo\n      };\n      await axios.post('/api/nptelcontent', data); // Replace with your backend endpoint\n      alert('Data saved successfully!');\n      // Reset form fields\n      setVideoTitle('');\n      setVideoDescription('');\n      setSelectedVideo('');\n    } catch (error) {\n      console.error('Error saving data:', error);\n      alert('Failed to save data.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"NPTEL Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Video Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: videoTitle,\n          onChange: e => setVideoTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Video Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: videoDescription,\n          onChange: e => setVideoDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Video Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedVideo,\n          onChange: e => setSelectedVideo(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"--Select a Video--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), videoNames.map((video, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: video,\n            children: video\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(NptelContent, \"Ts16w4i1YoqF4Pa+M3bCm7xN+Bc=\");\n_c = NptelContent;\nexport default NptelContent;\nvar _c;\n$RefreshReg$(_c, \"NptelContent\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","NptelContent","_s","videoTitle","setVideoTitle","videoDescription","setVideoDescription","videoNames","setVideoNames","selectedVideo","setSelectedVideo","fetchVideoNames","response","get","data","error","console","handleSubmit","e","preventDefault","alert","video_title","video_description","video_name","post","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","map","video","index","_c","$RefreshReg$"],"sources":["D:/react_project/frontend/src/components/FacultyModule/View/MainComponent/NptelContent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst NptelContent = () => {\r\n  const [videoTitle, setVideoTitle] = useState('');\r\n  const [videoDescription, setVideoDescription] = useState('');\r\n  const [videoNames, setVideoNames] = useState([]);\r\n  const [selectedVideo, setSelectedVideo] = useState('');\r\n\r\n  // Fetch video names from the backend on component mount\r\n  useEffect(() => {\r\n    const fetchVideoNames = async () => {\r\n      try {\r\n        const response = await axios.get('/api/videos'); // Replace with your backend endpoint\r\n        setVideoNames(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching video names:', error);\r\n      }\r\n    };\r\n    fetchVideoNames();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!videoTitle || !selectedVideo) {\r\n      alert('Please fill in all required fields.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const data = {\r\n        video_title: videoTitle,\r\n        video_description: videoDescription,\r\n        video_name: selectedVideo,\r\n      };\r\n      await axios.post('/api/nptelcontent', data); // Replace with your backend endpoint\r\n      alert('Data saved successfully!');\r\n      // Reset form fields\r\n      setVideoTitle('');\r\n      setVideoDescription('');\r\n      setSelectedVideo('');\r\n    } catch (error) {\r\n      console.error('Error saving data:', error);\r\n      alert('Failed to save data.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>NPTEL Content</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Video Title:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={videoTitle}\r\n            onChange={(e) => setVideoTitle(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Video Description:</label>\r\n          <textarea\r\n            value={videoDescription}\r\n            onChange={(e) => setVideoDescription(e.target.value)}\r\n          ></textarea>\r\n        </div>\r\n        <div>\r\n          <label>Video Name:</label>\r\n          <select\r\n            value={selectedVideo}\r\n            onChange={(e) => setSelectedVideo(e.target.value)}\r\n            required\r\n          >\r\n            <option value=\"\">--Select a Video--</option>\r\n            {videoNames.map((video, index) => (\r\n              <option key={index} value={video}>\r\n                {video}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        \r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NptelContent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}